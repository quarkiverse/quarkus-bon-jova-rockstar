isInMandelbrotSet wants x, and y (function that decides if a point is in the set and returns a space or a dot)
    maxIterations is 320
    iterationCount is 0
    modulus is 0
    maxModulus is 4
    Let something be 0
    Let anything be 0
    While iterationCount is lower than maxIterations and modulus is lower than maxModulus
        Let love be something
        Let love be something of it (in other words, something times something, that is, squared)
        Let your head be anything
        Let your head be anything of it (in other words, anything times anything)
        Let the difference be love without your head (Bon Jova does not order operations using proper mathematical rules, so we need an interim value when chaining addition and subtraction)
        Let the summit be the difference plus x
        A million is insufficient (a fancy way of defining 2)
        Let product be a million times something times anything
        Let anything be product plus y (Bon Jova does not order operations using proper mathematical rules, so we need an interim value when chaining multiplication and addition)
        Let something be the summit
        Let modulus be something of something + anything of anything
        Build iterationCount up

    dotCharCode is only scared (ie 46)
    Cast dotCharCode into dot
    delta is a fire (a complicated way of saying 14)
    Let blankCharCode be dotCharCode minus delta
    Cast blankCharCode into blank (all of the above lines are very complicated way to generate two characters, done in a loop for extra inefficiency)
    If iterationCount is less than maxIterations
        Let the answer be blank,
    Else let the answer be dot

    Return the answer

calculateRow takes currentY
    Push row (Initialise the array before using it in a while loop, see https://github.com/quarkiverse/quarkus-bon-jova-rockstar/issues/110)
    x is 0
    Knock x down, down (Decrement down to -2)
    maxX is 0.4
    increment is 0.03
    While x is less than maxX
    Let x be x plus increment
    Let currentX be x
    Push row with isInMandelbrotSet taking currentX 'n' currentY

    Join row
    Return row

rowPos is impossible
Knock rowPos down (a complicated way of declaring -1)
incrementNumerator is incredible
Build incrementNumerator up (a complicated way of declaring 1)
While rowPos is less than incrementNumerator
    incrementDenominator is a light (in other words, 15)
    Let rowPos be rowPos with incrementNumerator over incrementDenominator (increment by 1/15)
    Say calculateRow taking rowPos