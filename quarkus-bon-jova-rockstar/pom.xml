<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.quarkiverse</groupId>
        <artifactId>quarkiverse-parent</artifactId>
        <version>15</version>
    </parent>
    <name>Bon Jova Quarkus Extension - Parent</name>

    <groupId>io.quarkiverse.bonjova</groupId>
    <artifactId>quarkus-bon-jova-rockstar-parent</artifactId>
    <version>0.8.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <description>An implementation of Rockstar as a JVM language. Rockstar is an example of an “esoteric language,”
        designed to be interesting rather than intuitive, efficient or especially functional. Rockstar’s interesting
        feature is that its programs use the lyrical conventions of eighties rock ballads. Bon Jova is an implementation
        of Rockstar as a JVM language, and also a supporting Quarkus extension.
    </description>

    <modules>
        <module>compiler</module>
        <!-- Disabled because it cannot be downloaded from jitpack -->
<!--        <module>lyrics</module>-->
        <module>deployment</module>
        <module>runtime</module>
        <module>integration-tests</module>
        <module>docs</module>
    </modules>

    <scm>
        <connection>scm:git:git@github.com:quarkiverse/quarkus-bon-jova-rockstar.git</connection>
        <developerConnection>scm:git:git@github.com:quarkiverse/quarkus-bon-jova-rockstar.git</developerConnection>
        <url>https://github.com/quarkiverse/quarkus-bon-jova-rockstar/</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <compiler-plugin.version>3.11.0</compiler-plugin.version>
        <failsafe-plugin.version>${surefire-plugin.version}</failsafe-plugin.version>
        <maven.compiler.release>21</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <quarkus.version>3.9.1</quarkus.version>
        <surefire-plugin.version>3.5.2</surefire-plugin.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-bom</artifactId>
                <version>${quarkus.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-maven-plugin</artifactId>
                    <version>${quarkus.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire-plugin.version}</version>
                    <configuration>
                        <systemPropertyVariables>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            <maven.home>${maven.home}</maven.home>
                            <maven.repo>${settings.localRepository}</maven.repo>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${failsafe-plugin.version}</version>
                    <configuration>
                        <systemPropertyVariables>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            <maven.home>${maven.home}</maven.home>
                            <maven.repo>${settings.localRepository}</maven.repo>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler-plugin.version}</version>
                    <configuration>
                        <compilerArgs>
                            <arg>-parameters</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>

                <!-- Impsort does not yet work with Java 21, see https://github.com/revelc/impsort-maven-plugin/issues/79 -->
                <plugin>
                    <groupId>net.revelc.code</groupId>
                    <artifactId>impsort-maven-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>it</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>!true</value>
                </property>
            </activation>
            <modules>
                <module>integration-tests</module>
            </modules>
        </profile>
    </profiles>
</project>
